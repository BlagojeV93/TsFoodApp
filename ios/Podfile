require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.3'
install! 'cocoapods', :deterministic_uuids => false

target 'TsFoodApp' do
  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'TsFoodAppTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # Run the React-Native post install
    react_native_post_install(installer, :mac_catalyst_enabled => false)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  
    # Get the development team id from the main project
    dev_team_id = ""
    project = installer.aggregate_targets[0].user_project
    project.targets.each do |target|
      target.build_configurations.each do |config|
        if dev_team_id.empty? and !config.build_settings['DEVELOPMENT_TEAM'].nil?
          dev_team_id = config.build_settings['DEVELOPMENT_TEAM']
        end
      end
    end
  
    # Reconfigure the pods, update deployment target and signing settings
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        if target.respond_to?(:product_type) and target.product_type == 'com.apple.product-type.bundle'
          config.build_settings['DEVELOPMENT_TEAM'] = dev_team_id
          config.build_settings['CODE_SIGN_IDENTITY'] = 'Apple Distribution';
          config.build_settings['CODE_SIGN_STYLE'] = 'Manual';
        end if
  
        config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
      end
  end
end
end
